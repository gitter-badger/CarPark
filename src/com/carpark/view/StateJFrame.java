/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StateJFrame.java
 *根据停车场的状态显示相关的按钮
 * Created on 2012-7-21, 15:23:58
 */
package com.carpark.view;


import com.Ibiz.ISpaceBiz;
import com.Idao.ICustomerDao;
import com.Idao.IRecordDao;
import com.biz.SpaceBiz;
import com.biz.UserBiz;
import com.dao.CustomerDao;
import com.dao.RecordDao;
import com.dao.SpaceDao;
import com.vo.Customer;
import com.vo.Record;
import com.vo.Space;
import java.math.BigDecimal;

import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JOptionPane;


/**
 *
 * @author Zeming
 */
public class StateJFrame extends javax.swing.JFrame {

    private Space space;
    private ICustomerDao customerDao;
    private SpaceDao spaceDao;
    private Customer customer;
    private IRecordDao recordDao;
    private ISpaceBiz spaceBiz;

    /** Creates new form StateJFrame */
    public StateJFrame() {
        initComponents();
    }

    //根据状态显示按钮
    public StateJFrame(Space space, Customer customer) {
        this.customer = customer;
        this.space = space;
        initComponents();
        if (space.getState() == 0) {
            setTitle("停车或维护");
            jButton3.setVisible(false);
            jButton4.setVisible(false);
        } else if (space.getState() == 1) {
            setTitle("结账");
            jButton1.setVisible(false);
            jButton4.setVisible(false);
            jButton2.setVisible(false);
        } else if (space.getState() == 2) {
            setTitle("设置可用");
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton3.setVisible(false);
        }
        //初始化场地业务类
        spaceBiz = new SpaceBiz();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.carpark.view.CarParkApp.class).getContext().getResourceMap(StateJFrame.class);
        jButton1.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton2))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//停车操作
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //获取卡号  
        String cardNo = JOptionPane.showInputDialog(rootPane, "请输入卡号:",
                "请输入会员卡号，不输入则随机抽取临时卡", JOptionPane.INFORMATION_MESSAGE);
        customerDao = new CustomerDao();
        spaceDao = new SpaceDao();
        //点击取消或者关闭
        if (cardNo == null) {
            return;
        }
        //不输入卡号，默认随机抽取临时卡
        if (cardNo.equals("")) {
            //验证临时卡
            customer = customerDao.findTempCar();
            //获取到输入信息后
            //临时卡状态修改为在用
            //停车位状态修改为在用
            //添加消费记录
            if (customer != null) {
                //修改卡的状态
                customerDao.updateCustomerState(1, customer);
                //修改场地的状态
                spaceDao.updateSpaceState(space, 1);
                //获取当前时间
                Timestamp d = new Timestamp(System.currentTimeMillis());
                //添加消费记录
                Record record = new Record(UserBiz.user.getId(), space.getId(), customer.getId(), d, null, 0);
                recordDao = new RecordDao();
                recordDao.saveRecordS(record);
                this.setVisible(false);
                //刷新主界面
                spaceBiz.refresh();
            } else {
                //临时卡用完，提示信息
                JOptionPane.showMessageDialog(rootPane, "请添加临时卡或输入会员卡", "临时卡已用完", JOptionPane.WARNING_MESSAGE);
            }
            //点击确定，输入会员卡号
        } else {
            //验证会员卡
            Customer temp = new Customer();
            temp.setCardNo(cardNo);
            List vcustomerList = customerDao.findCustomerByCondition(temp);
            if (vcustomerList != null && vcustomerList.size() > 0) {
                //拿到验证后的卡
                Customer vcustomer = (Customer) vcustomerList.get(0);
                if (vcustomer.getCash() <= 20) {
                    JOptionPane.showMessageDialog(rootPane, "卡上余额不足20元，请充值", "请充值", JOptionPane.WARNING_MESSAGE);
                } else if (vcustomer.getState() == 1) {
                    JOptionPane.showMessageDialog(rootPane, "你输入的卡号正在使用，请确认结账后再重新输入", "卡号正在使用", JOptionPane.WARNING_MESSAGE);
                } else {
                    //修改卡的状态
                    customerDao.updateCustomerState(1, vcustomer);
                    //修改场地的状态
                    spaceDao.updateSpaceState(space, 1);
                    //获取当前时间
                    Timestamp d = new Timestamp(System.currentTimeMillis());
                    //添加消费记录
                    Record record = new Record(UserBiz.user.getId(), space.getId(), vcustomer.getId(), d, null, 0);
                    recordDao = new RecordDao();
                    recordDao.saveRecordS(record);
                    this.setVisible(false);
                    //刷新主界面
                    spaceBiz.refresh();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "您输入的卡号错误", "验证失败", JOptionPane.WARNING_MESSAGE);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    //维护按钮
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //跳出选择对话框 X -1  取消 2  否 1 是 0
        int option = JOptionPane.showConfirmDialog(rootPane, "是否要进行场地维护？");
        if (option == -1 || option == 2 || option == 1) {
            return;
        } else {
            //设置状态为维护并写入到数据库中
            spaceDao = new SpaceDao();
            spaceDao.updateSpaceState(space, 2);
            this.setVisible(false);
            //刷新主界面
            spaceBiz.refresh();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    //结束维护按钮
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int option = JOptionPane.showConfirmDialog(rootPane, "是否完成维护？");
        if (option == -1 || option == 2 || option == 1) {
            return;
        } else {
            //设置状态为空闲写入到数据库中
            spaceDao = new SpaceDao();
            spaceDao.updateSpaceState(space, 0);
            this.setVisible(false);
            //刷新主界面
            spaceBiz.refresh();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    //结账按钮
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int option = JOptionPane.showConfirmDialog(rootPane, "是否要结账？");
         if (option == -1 || option == 2 || option == 1) {
            return;
        } else {
        //停车位的状态修改为空闲
        spaceDao = new SpaceDao();
        spaceDao.updateSpaceState(space, 0);
        //添加消费记录
        recordDao = new RecordDao();
        //获取当前时间
        Timestamp d = new Timestamp(System.currentTimeMillis());
        //获取当前记录
        Record record = recordDao.findRecordBySpaceId(space.getId());
        //设置结账时间
        record.setEtime(d);
        //消费时间
        double hour = (record.getEtime().getTime() - record.getStime().getTime())/1000d/60d/60d;
        //保留两位小数
        DecimalFormat df1=new DecimalFormat("#.00");
        double st=Double.parseDouble(df1.format(hour));
        //String st = df1.format(hour);
        //计算金额
        int money = count(customer, record);
        int finalMoney = customer.getCash();
        if (customer.getCtype() == 0) {
            //临时卡处理
            recordDao.updateRecordE(customer.getId(), d, money);
            JOptionPane.showMessageDialog(rootPane, "临时卡号" + customer.getCardNo() + "停车" + st + "小时。\n"
                    +"消费金额为："+money+ "元，欢迎再次光临！！", "结账成功", JOptionPane.INFORMATION_MESSAGE);
        } else {
            //会员卡处理
            finalMoney = customer.getCash() - money;
            //结账后如果余额小于0元，要补交
            if (finalMoney < 0) {
                JOptionPane.showMessageDialog(rootPane, "VIP卡号" + customer.getCardNo() + "停车"  + st + "小时\n"
                        +"消费金额为:"+money+ "元，欠费" + Math.abs(finalMoney) + "元，请补交欠费金额!!", "欠费结账", JOptionPane.INFORMATION_MESSAGE);
                finalMoney = 0;
            } else {
                recordDao.updateRecordE(customer.getId(), d, money);
                JOptionPane.showMessageDialog(rootPane, "VIP卡号" + customer.getCardNo() + "停车" + st + "小时\n"
                        +"消费金额为:"+money+ "元，余额为" + finalMoney + "元,欢迎再次光临！！", "结账成功", JOptionPane.INFORMATION_MESSAGE);
                //卡的状态修改为空闲,修改余额
            }
        }
        customerDao = new CustomerDao();
        customerDao.updateCustomerState(0, customer);
        customerDao.updateCustomerCash(finalMoney, customer);
        this.setVisible(false);
        spaceBiz.refresh();
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * 计算消费金额
     * 第一个小时20元，之后每15分钟5元，超过5分钟的以15分钟来计算，
     *如用时86分钟，减去60分钟后为26分钟，之后减去15分钟还有11分，则还要加上5元，总共费用：30元。
     *会员按消费金额的8折进行收费。
     * @param customer 消费的客户
     * @param record 消费记录
     * @return 消费金额
     */
    public int count(Customer customer, Record record) {
        int money;
        //获取消费的时间（秒数）
        long time = (record.getEtime().getTime() - record.getStime().getTime()) / 1000;
        int minute = (int) (time / 60);//上网用分钟数
        if (minute < 65) {
            money = 20;
        } else {
            //超过一个小时的分钟数
            if (minute % 15 < 5) {
                money = ((minute / 15)) * 5;
            } else {
                //超过十五分钟内的五分钟，加收五块钱
                money = ((minute / 15)) * 5 + 5;
            }
        }
        //最后判断客户是否为VIP
        if (customer.getCtype() == 1) {
            money = (int) (money * 0.8);
        }
        return money;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new StateJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
